{{!-- Contains configuration snippets that can be used when building the vhost publish tenant template --}}


{{~#block "serverName"}}
  # Primary hostname
  ServerName {{tenant}}
{{/block}}


{{~#block "serverAliasNames"}}
  # Alternative hostnames
{{~#each serverAliasNames}}
  ServerAlias {{this}}
{{~/each}}
{{/block}}


{{~#block "logSettings"}}
  # Possible values include: debug, info, notice, warn, error, crit, alert, emerg.
  LogLevel warn
  ErrorLog ${APACHE_LOG_DIR}/vhost_publish_{{tenant}}_error.log
  CustomLog ${APACHE_LOG_DIR}/vhost_publish_{{tenant}}_access.log combined
{{/block}}

{{~#block "generalSettings"}}
  # Do not allow RFC 2616 trace requests
  TraceEnable Off

  # Enable rewrite engine
  RewriteEngine On
{{/block}}

{{~#block "dispatcherModule"}}
  # Enable AEM dispatcher module
  <Location />
    <IfModule disp_apache2.c>
      ModMimeUsePathInfo On
      # enable dispatcher for ALL requests.
      SetHandler dispatcher-handler
    </IfModule>
  </Location>
{{/block}}


{{~#block "downloadContentDispositionHeader"}}
  ## Content disposition header for downloads ####
  <LocationMatch "^.*/dam/.*\.download_attachment\..*$">
    Header set Content-Disposition: attachment
  </LocationMatch>
{{/block}}


{{~#block "cacheControl"}}
  # Cache-control
  Header set Cache-Control "public, must-revalidate"

  # Cache AEM Clientlibs with long cache key for 1 year
  <LocationMatch "\.lc-.*-lc\.min\.(css|js)$">
    Header set Cache-Control "max-age=31536000, public"
  </LocationMatch>
{{/block}}



{{~#block "searchRobotHeader"}}
  # Control indexing by search engine robots
  # noindex for some non-html files
  <LocationMatch ".*\.(css|js)$">
    Header set X-Robots-Tag "noindex"
  </LocationMatch>
  <LocationMatch ".*\.sitemap\.xml$">
    Header set X-Robots-Tag "noindex"
  </LocationMatch>

  # Exclude requests with debugClientLibs=true parameter from indexing
  <If "%{QUERY_STRING} =~ /debugClientLibs=true/">
    Header set X-Robots-Tag "noindex, nofollow"
  </If>
{{/block}}


{{~#block "accessRestrictionsLocationFilter"}}
# Location filter
{{#each httpd.locationFilter~}}
{{aemHttpdFilter this allowFromKey="dispatcher.allowAdminAccessFrom" allowFromHostKey="dispatcher.allowAdminAccessFromHost"}}
{{/each~}}
{{/block}}


{{~#block "accessRestrictionsDispatcherFlush"}}
  # Allow dispatcher flushing only from defined hosts
  <Location "/dispatcher">
    <IfVersion < 2.4>
      Order Deny,Allow
      Deny from all
  {{~#if dispatcher.allowFlushFrom}}
      Allow from {{dispatcher.allowFlushFrom}}
  {{~/if}}
  {{~#if dispatcher.allowFlushFromHost}}
      Allow from {{dispatcher.allowFlushFromHost}}
  {{~/if}}
    </IfVersion>
    <IfVersion >= 2.4>
      Require all denied
  {{~#if dispatcher.allowFlushFrom}}
      Require ip {{dispatcher.allowFlushFrom}}
  {{~/if}}
  {{~#if dispatcher.allowFlushFromHost}}
      Require host {{dispatcher.allowFlushFromHost}}
  {{~/if}}
    </IfVersion>
  </Location>
{{/block}}


{{~#block "rewriteEnforcePrimaryHostname"}}
  # Don't rewrite the dispatcher invalidation URL
  RewriteCond %{REQUEST_URI} !^/dispatcher/invalidate.cache
  # Make sure primary hostname is always used
  RewriteCond %{HTTP_HOST} !^{{regexQuote tenant}}$ [NC] 
  RewriteRule ^(.*)$ http://{{tenant}}$1 [R=301,L]
{{/block}}


{{~#block "corsHeader"}}
{{~#if dispatcher.corsHeader.enabled}}
  # Send CORS header to client for certain requests
  <Location ~ "{{dispatcher.corsHeader.locationMatch}}">
    {{~#if dispatcher.corsHeader.allowAllHosts}}
    Header add Access-Control-Allow-Origin "*"
    {{~else}}
    SetEnvIf Origin "^(
      {{~#if dispatcher.corsHeader.hostWhiteList ~}}
        {{~#each dispatcher.corsHeader.hostWhiteList}}{{regexQuote this}}{{#unless @last}}|{{/unless}}{{/each ~}}
      {{~else ~}}
        .*
      {{~/if ~}}
    )$" AccessControlAllowOrigin=$0
    Header add Access-Control-Allow-Origin "%{AccessControlAllowOrigin}e" env=AccessControlAllowOrigin
    Header merge Vary Origin
    {{~/if}}
  </Location>
{{~/if}}
{{/block}}


{{~#block "tenantSpecificVHostConfig"}}
{{#if dispatcher.tenantSpecificVHostConfig ~}}
#### Configuration specific for this tenant ####

{{dispatcher.tenantSpecificVHostConfig}}
{{~/if}}
{{/block}}


{{~#block "rewriteSlingShortUrlMapping"}}
{{~#if slingMappingPath}}
  # Don't rewrite the dispatcher invalidation URL
  RewriteCond %{REQUEST_URI} !^/dispatcher/invalidate.cache

  # Rewrite all paths to short url mapping except special system paths
  RewriteCond %{REQUEST_URI} !^/apps
  RewriteCond %{REQUEST_URI} !^/bin
  RewriteCond %{REQUEST_URI} !^/content
  RewriteCond %{REQUEST_URI} !^/etc
  RewriteCond %{REQUEST_URI} !^/home
  RewriteCond %{REQUEST_URI} !^/libs
  RewriteCond %{REQUEST_URI} !^/services
  RewriteCond %{REQUEST_URI} !^/system
  RewriteCond %{REQUEST_URI} !^/tmp
  RewriteCond %{REQUEST_URI} !^/var
  RewriteRule ^/(.+)$ {{slingMappingPath}}/$1 [PT,L]  


  # Do not allow access to any /content without url shortening path (except to assets)
  RewriteCond %{REQUEST_URI} !^/content/dam
{{~#if slingMappingAllowUnshortenedPath}}
  RewriteCond %{REQUEST_URI} !^{{slingMappingPath}}
{{~/if}}
  RewriteRule ^/content/.* - [R=404,L,NC]
{{/if ~}}
{{/block}}


{{~#block "rewriteHomepageRedirect"}}
{{~#if dispatcher.rootRedirectUrl}}
  # Root redirect to homepage
  RewriteRule ^/$ {{dispatcher.rootRedirectUrl}} [R={{dispatcher.rootRedirectHttpStatus}},L]
{{/if ~}}
{{/block}}
